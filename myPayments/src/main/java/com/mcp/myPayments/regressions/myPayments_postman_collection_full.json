{
  "info": {
    "name": "myPayments API v1 (Full)",
    "_postman_id": "f8097b70-245a-4dd9-b769-a2c345a162ee",
    "description": "Comprehensive Postman collection for myPayments. Covers Customers, Transactions, Payments, Analytics, with filters, idempotency, and basic tests.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Customers",
      "item": [
        {
          "name": "Create customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Ada Lovelace\",\n  \"email\": \"ada@example.com\",\n  \"phoneNumber\": \"5551234567\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201-201', function () {",
                  "  pm.expect(pm.response.code).to.be.within(201, 201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer by id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers",
                "{{customerId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "List customer transactions (filters + paging)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerId}}/transactions?status=&category=&currency=&from=&to=&page=0&size=10&sort=createdAt,desc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers",
                "{{customerId}}",
                "transactions?status=&category=&currency=&from=&to=&page=0&size=10&sort=createdAt,desc"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Create transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Idempotency-Key",
                "value": "{{IDEMPOTENCY_KEY}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/transactions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "transactions"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"amount\": 199.99,\n  \"currency\": \"{{currency}}\",\n  \"category\": \"{{category}}\",\n  \"description\": \"Headphones\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201-201', function () {",
                  "  pm.expect(pm.response.code).to.be.within(201, 201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get transaction by id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transactionId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "transactions",
                "{{transactionId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Search transactions (filters + paging)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions?customerId={{customerId}}&status=&category=&currency=&from=&to=&page=0&size=10&sort=createdAt,desc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "transactions?customerId={{customerId}}&status=&category=&currency=&from=&to=&page=0&size=10&sort=createdAt,desc"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Cancel transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Idempotency-Key",
                "value": "{{IDEMPOTENCY_KEY}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transactionId}}/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "transactions",
                "{{transactionId}}",
                "cancel"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Make payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Idempotency-Key",
                "value": "{{IDEMPOTENCY_KEY}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/payments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"{{transactionId}}\",\n  \"method\": \"CreditCard\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201-201', function () {",
                  "  pm.expect(pm.response.code).to.be.within(201, 201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get payment by id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/payments/{{paymentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                "{{paymentId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get payment by transaction id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transactionId}}/payment",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "transactions",
                "{{transactionId}}",
                "payment"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Retry payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Idempotency-Key",
                "value": "{{IDEMPOTENCY_KEY}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/payments/{{paymentId}}/retry",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                "{{paymentId}}",
                "retry"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Mark payment failed (reason)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Idempotency-Key",
                "value": "{{IDEMPOTENCY_KEY}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/payments/{{paymentId}}/fail?reasonCode=INSUFFICIENT_FUNDS",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                "{{paymentId}}",
                "fail?reasonCode=INSUFFICIENT_FUNDS"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Spend summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/spend-summary?customerId={customerId}&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31&fxBase=USD",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "analytics",
                "spend-summary?customerId={customerId}&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31&fxBase=USD"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Spend by category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/spend-by-category?customerId={customerId}&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "analytics",
                "spend-by-category?customerId={customerId}&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Time series (monthly)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/time-series?customerId={customerId}&bucket=month&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31&category=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "analytics",
                "time-series?customerId={customerId}&bucket=month&from=2025-07-11T01:31:31&to=2025-08-10T01:31:31&category="
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200-299', function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (!pm.collectionVariables.get('IDEMPOTENCY_KEY')) {",
          "  pm.collectionVariables.set('IDEMPOTENCY_KEY', `idem-${Date.now()}-${crypto.randomUUID()}`);",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/api/v1/service"
    },
    {
      "key": "customerId",
      "value": "1"
    },
    {
      "key": "transactionId",
      "value": "1"
    },
    {
      "key": "paymentId",
      "value": "1"
    },
    {
      "key": "currency",
      "value": "USD"
    },
    {
      "key": "category",
      "value": "Retail"
    }
  ]
}